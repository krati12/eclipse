<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
	xmlns:context="http://www.springframework.org/schema/context">
	<context:annotation-config/>
	<context:component-scan base-package="org.krati.java"/>
	<!-- class org.springframework.jdbc.datasource.DriverManagerDataSource
	does not provide connection pool so instead of  
	<bean id="dataSource" class ="org.springframework.jdbc.datasource.DriverManagerDataSource">
	we can use dbcp with initialSize and MaxActive-->
	
	<bean id="dataSource" class ="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="org.apache.derby.jdbc.ClientDriver"/>
		<property name="url" value="jdbc:derby://localhost:1527/db;create=true"/>
		<property name="initialSize" value="2"/>
		<property name="maxActive" value="5" />
	</bean>
	<!-- 
	You can define Bean of jdbcTEmplate here and pass datasource as property or you can initialise
	jdbcTemplate in set bethod od datasource in JdbcDaoImpl -->
	<!-- 
	Instead of doing autowired  -->
	<bean id="simpleDaoJdbcDaoImpl" class="org.krati.java.dao.SimpleJdbcDaoImpl">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	</beans>
	